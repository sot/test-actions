---
name: Ska3 conda meta.yaml
on:
  repository_dispatch:
    types: [conda-meta-yaml]

jobs:
  generate-json:
    runs-on: ${{ matrix.os }}-latest
    name: Generate ${{ matrix.os }} json files
    if: ${{ github.event.client_payload.version && github.event.client_payload.skare3_branch }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "macos", "windows"]
    steps:
      - uses: sot/setup-miniconda@v2
        with:
          miniconda-version: "py38_4.8.3"
          python-version: "3.8"
          channels: https://ska:${{ secrets.CONDA_PASSWORD }}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight
      - name: Fetch Skare3
        uses: actions/checkout@v2
        with:
          repository: sot/skare3
          path: skare3
          ref: ${{ github.event.client_payload.skare3_branch }}
      - name: ska3-core
        shell: bash -l {0}
        run: |
          conda install mamba
          python ./skare3/install_from_scratch.py --meta ./skare3/pkg_defs/ska3-core-latest/meta.yaml
          conda list --json > ska3-core-${ARCH}.json
      - name: ska3-flight
        shell: bash -l {0}
        run: |
          mamba install -c https://ska:${{ secrets.CONDA_PASSWORD }}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight quaternion
          mamba install -c defaults -c conda-forge -c https://ska:${{ secrets.CONDA_PASSWORD }}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight ska3-flight-latest
          conda list --json > ska3-flight-${ARCH}.json
      - name: ska3-perl
        if: ${{ matrix.os != 'windows' }}
        shell: bash -l {0}
        run: |
          mamba install -c defaults -c conda-forge -c https://ska:${{ secrets.CONDA_PASSWORD }}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight ska3-perl-latest
          conda list --json > ska3-perl-${ARCH}.json
      - name: Save
        uses: actions/upload-artifact@v2
        with:
          name: json-files
          path: ska3-*.json
    env:
      ARCH: ${{ matrix.os }}
      CONDA_PASSWORD: ${{ secrets.CONDA_PASSWORD }}
