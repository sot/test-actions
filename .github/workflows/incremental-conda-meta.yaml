---
name: Ska3 conda meta.yaml
on:
  repository_dispatch:
    types: [incremental-conda-meta]

jobs:
  generate-json:
    runs-on: ${{ matrix.os }}-latest
    name: Generate ${{ matrix.os }} json files
    if: ${{ github.event.client_payload.version && github.event.client_payload.skare3_branch }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "macos", "windows"]
    steps:
      - name: Checkout skare3_tools
        uses: actions/checkout@v2
        with:
          repository: sot/skare3_tools
          ref: improvements
          path: skare3_tools
      - uses: sot/setup-miniconda@v2
        with:
          miniconda-version: "py38_4.8.3"
          python-version: "3.8"
          channels: https://ska:${{ secrets.CONDA_PASSWORD }}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight
      - name: ska3-core
        shell: bash -l {0}
        run: |
          conda install -y ska3-core
          conda install --strict-channel-priority --override-channels -c https://ska:${CONDA_PASSWORD}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight -c defaults -c conda-forge mamba
      - if: ${{ github.event.client_payload.update }}
        run: conda update -y -c defaults ${{ github.event.client_payload.update }}
      - if: ${{ github.event.client_payload.install }}
        run: conda install -y -c defaults ${{ github.event.client_payload.install }}
      - run: conda list --json > ska3-core-${ARCH}.json
      - run: |
          python --version
          python ./skare3_tools/skare3_tools/conda.py --directory packages/${{ matrix.os }} --exclude-channel  aspect/ska3-conda/flight
      - name: Save packages
        uses: actions/upload-artifact@v2
        with:
          name: conda-pkgs-${{ matrix.os }}
          path: packages
      - name: Save
        uses: actions/upload-artifact@v2
        with:
          name: json-files
          path: ska3-*.json
    env:
      ARCH: ${{ matrix.os }}
      CONDA_PASSWORD: ${{ secrets.CONDA_PASSWORD }}

  combine-arch:
    runs-on: ubuntu-latest
    name: Combine Arch
    needs: [generate-json]
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Checkout skare3
        uses: actions/checkout@v2
        with:
          repository: sot/skare3
          ref: ${{ github.event.client_payload.skare3_branch }}
          path: skare3
      - name: Get json files
        uses: actions/download-artifact@v2
        with:
          name: json-files
          path: json
      - name: pip
        run: python -m pip install jinja2 PyYAML
      - name: ska3-core
        run: |
          ./skare3/combine_arch_meta.py --name ska3-core --version ${SKA3_VERSION} \
            --out pkg_defs/ska3-core/meta.yaml \
            --env linux=json/ska3-flight-ubuntu.json \
            --env osx=json/ska3-flight-macos.json \
            --env win=json/ska3-flight-windows.json \
            --not-in skare3/pkg_defs/ska3-flight-latest/meta.yaml \
            --exclude ska3-flight
      - name: Save package
        uses: actions/upload-artifact@v2
        with:
          name: conda-meta-yaml
          path: pkg_defs
    env:
      SKA3_VERSION: ${{ github.event.client_payload.version }}
