name: Build Ska Package

on:
  repository_dispatch:
    types:
      - test-dispatch

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Package: ${{ github.event.client_payload.package }}"
        echo "Tag: ${{ github.event.client_payload.tag }}"
        echo "Arch: ${{ github.event.client_payload.arch }}"
        echo "Upload: ${{ github.event.client_payload.upload }}"
        echo "Python version: ${{ github.event.client_payload.python_version }}"
        echo "Numpy version: ${{ github.event.client_payload.numpy_version }}"
        echo "Input channel: ${{ github.event.client_payload.channel_in }}"
      shell: bash
    - run: |
        MISSING=""
        set_default() {
          if [[ -z "$2" ]]; then
            echo "Setting default value for $1"
            echo "$1=$3" >> $GITHUB_ENV
          else
            echo "$1=$2" >> $GITHUB_ENV
          fi
        }
        require () {
          if [[ -z "$2" ]]; then
            echo "Required value $1 not given"
            MISSING="$MISSING $1"
          fi
        }
        require PACKAGE ${{ github.event.client_payload.package }}
        require TAG ${{ github.event.client_payload.tag }}
        set_default PYTHON_VERSION "${{ github.event.client_payload.python_version }}" 3.11
        set_default NUMPY_VERSION "${{ github.event.client_payload.numpy_version }}" 1.26.2
        set_default CHANNEL "${{ github.event.client_payload.channe_in }}" "flight"
        set_default CHANNEL_OUT "${{ github.event.client_payload.channel_out }}" "test"
        if [ "${{ github.event.client_payload.upload }}" == "" ]; then echo upload is not given; fi
        if [ "${{ github.event.client_payload.upload }}" == "false" ]; then echo upload is false; fi
        if [ "${{ github.event.client_payload.upload }}" == "False" ]; then echo upload is False; fi
        if [[ ! -z $MISSING ]]; then echo "::warning:: Missing parameters: $MISSING"; exit 1; fi
    - if: ${{ github.event.client_payload.upload }}
      run: echo "Uploading"
    - run: echo "python version $PYTHON_VERSION"
  

