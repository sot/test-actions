name: Build Ska Package

on:
  repository_dispatch:
    types:
      - test-dispatch

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - id: arguments
      run: |
        MISSING=""
        set_default() {
          if [[ -z "$2" ]]; then
            echo "Setting default value for $1"
            echo "$1=$3" >> $GITHUB_OUTPUT
          else
            echo "$1=$2" >> $GITHUB_OUTPUT
          fi
        }
        require () {
          if [[ -z "$2" ]]; then
            echo "Required value $1 not given"
            MISSING="$MISSING $1"
          else
            echo "$1=$2" >> $GITHUB_OUTPUT
          fi
        }
        require package ${{ github.event.client_payload.package }}
        require tag ${{ github.event.client_payload.tag }}
        set_default upload "${{ github.event.client_payload.upload }}" false
        set_default python_version "${{ github.event.client_payload.python_version }}" 3.11
        set_default numpy_version "${{ github.event.client_payload.numpy_version }}" 1.26.2
        set_default channel_in "${{ github.event.client_payload.channe_in }}" "flight"
        set_default channel_out "${{ github.event.client_payload.channel_out }}" "test"
        if [ "${{ github.event.client_payload.upload }}" == "" ]; then echo upload is not given; fi
        if [ "${{ github.event.client_payload.upload }}" == "false" ]; then echo upload is false; fi
        if [ "${{ github.event.client_payload.upload }}" == "False" ]; then echo upload is False; fi
        if [[ ! -z $MISSING ]]; then echo "::warning:: Missing parameters: $MISSING"; exit 1; fi
    - run: |
        echo "Package: ${{ steps.arguments.outputs.package }}"
        echo "Tag: ${{ steps.arguments.outputs.tag }}"
        echo "Arch: ${{ steps.arguments.outputs.arch }}"
        echo "Upload: ${{ steps.arguments.outputs.upload }}"
        echo "Python version: ${{ steps.arguments.outputs.python_version }}"
        echo "Numpy version: ${{ steps.arguments.outputs.numpy_version }}"
        echo "Input channel: ${{ steps.arguments.outputs.channel_in }}"
        echo "Output channel: ${{ steps.arguments.outputs.channel_out }}"
    - if: ${{ github.event.client_payload.upload }}
      run: echo "Uploading"
    - run: echo "python version $PYTHON_VERSION"
  

